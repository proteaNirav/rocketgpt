name: Triage Spec

on:
  issues:
    types: [opened, edited, labeled]

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  triage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Parse Business Spec from Issue Body
        id: spec
        uses: actions/github-script@v7
        with:
          script: |
            const body = context.payload.issue.body || '';
            const m = body.match(/```json([\s\S]*?)```/i);
            const json = m ? m[1].trim() : '{}';
            core.setOutput('spec', json);

      - name: Check label & auto-exit if not self-apply
        uses: actions/github-script@v7
        with:
          script: |
            const labels = context.payload.issue.labels.map(l => l.name);
            if (!labels.includes('self-apply')) {
              core.notice('Label self-apply not found â€” skipping gracefully.');
              process.exit(0);
            }

      - name: Expand to Tasks (Plan Agent)
        run: |
          mkdir -p rocketgpt-agents/out
          echo '${{ steps.spec.outputs.spec }}' > spec.json
          node rocketgpt-agents/runners/github_actions.js plan spec.json > rocketgpt-agents/out/tasks.json
          echo "Planned tasks:"
          cat rocketgpt-agents/out/tasks.json

      - name: Comment planned tasks + add codegen:ready
        uses: actions/github-script@v7
        with:
          script: |
            const issue_number = context.payload.issue.number;
            const body = [
              "### ðŸ—‚ Planned Tasks",
              "```json",
              `${{ steps.spec.outputs.spec }}`,
              "```",
              "**Next:** Label `codegen:ready` to start code generation."
            ].join("\n");

            // Add comment
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number,
              body
            });

            // Add label
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number,
              labels: ['codegen:ready']
            });
