name: AI Codegen
on:
  issues:
    types: [labeled]
permissions:
  contents: write
  pull-requests: write
  issues: write
jobs:
  codegen:
    if: contains(github.event.issue.labels.*.name, 'codegen:ready')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Setup Node
        uses: actions/setup-node@v4
        with: { node-version: '20' }
        - run: npm install --global @actions/github-script


      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with: { dotnet-version: '9.0.x' }

      - name: Pull Spec from Issue
        id: spec
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            const m = (issue.body||'').match(/```json([\s\S]*?)```/i);
            const json = m ? m[1].trim() : '{}';
            core.setOutput('spec', json);
            core.setOutput('title', issue.title);

      - name: Install (no external deps)
        run: echo "No npm deps required."

      - name: Generate Code (Planâ†’Codeâ†’Testsâ†’Docsâ†’Guard)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          DRIVE_SVC_JSON: ${{ secrets.DRIVE_SVC_JSON }}
        run: |
          echo '${{ steps.spec.outputs.spec }}' > spec.json
          node rocketgpt-agents/runners/github_actions.js code spec.json
          node rocketgpt-agents/runners/github_actions.js test spec.json
          node rocketgpt-agents/runners/github_actions.js doc spec.json
          node rocketgpt-agents/runners/github_actions.js guard spec.json

      - name: Build (JS + .NET)
        run: |
          echo "Running dotnet build (if solution present)"
          if [ -f "./LicenseManager.sln" ]; then dotnet build ./LicenseManager.sln -c Release; else echo "No .sln found, skipping."; fi

      - name: Run Tests (if present)
        run: |
          if [ -f "./LicenseManager.sln" ]; then dotnet test ./LicenseManager.sln -c Release --logger "trx;LogFileName=test.trx"; else echo "No tests, skipping."; fi

      - name: Create Branch, Commit & Push
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BRANCH="ai/codegen/${{ github.event.issue.number }}"
          git checkout -b "$BRANCH"
          git add -A
          git commit -m "AI codegen for #${{ github.event.issue.number }}: ${{ steps.spec.outputs.title }}"
          git push origin "$BRANCH"
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV

      - name: Open PR
        uses: peter-evans/create-pull-request@v6
        with:
          base: main
          branch: ${{ env.BRANCH }}
          title: "AI Codegen: ${{ steps.spec.outputs.title }}"
          body: |
            ## ðŸ¤– What changed
            Generated code and tests from spec in #${{ github.event.issue.number }}.

            ## âœ… Checklist
            - [ ] Builds pass
            - [ ] Tests added & green
            - [ ] Security scan clean
            - [ ] Product acceptance met

            ### Artifacts
            - See commit diff. Agents wrote files under project paths.
