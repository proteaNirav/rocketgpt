name: Auto Merge (AI-approved & score-gated)

on:
  pull_request:
    types: [labeled, synchronize, reopened, ready_for_review]

permissions:
  contents: write
  pull-requests: write
  checks: read
  statuses: read

concurrency:
  group: auto-merge-pr-${{ github.event.pull_request.number }}
  cancel-in-progress: true

env:
  MIN_ACCEPT_SCORE: ${{ vars.MIN_ACCEPT_SCORE || 75 }}

jobs:
  merge:
    if: |
      !github.event.pull_request.draft &&
      contains(join(github.event.pull_request.labels.*.name, ','), 'auto-merge:ready') &&
      github.event.pull_request.head.repo.full_name == github.repository
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Read score.json (best effort)
        id: score
        run: |
          set -e
          BRANCH="${{ github.event.pull_request.head.ref }}"
          git fetch --depth=1 origin "${BRANCH}:${BRANCH}" || true

          SCORE_FOUND=0
          for p in openai anthropic google groq; do
            if git cat-file -e "${BRANCH}:generated/${p}/score.json" 2>/dev/null; then
              git show "${BRANCH}:generated/${p}/score.json" > score.json
              SCORE_FOUND=1
              break
            fi
          done

          if [ $SCORE_FOUND -eq 0 ]; then
            echo '{"overall":60,"notes":"No score found; defaulting."}' > score.json
          fi

          echo "Score file:"
          cat score.json

      - name: Parse score.json
        id: scoreval
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const raw = fs.readFileSync('score.json','utf8');
            let obj = {};
            try { obj = JSON.parse(raw); } catch { obj = {}; }
            const score = Number(obj.overall ?? 60);
            core.setOutput('score', score);

      - name: Enforce score threshold
        if: ${{ steps.scoreval.outputs.score < env.MIN_ACCEPT_SCORE }}
        run: |
          echo "Score ${{ steps.scoreval.outputs.score }} < MIN_ACCEPT_SCORE (${MIN_ACCEPT_SCORE}). Refusing auto-merge."
          exit 1

      - name: Ensure all checks are green
        id: checks
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.repo;
            const sha = context.payload.pull_request.head.sha;
            const { data } = await github.rest.repos.getCombinedStatusForRef({ owner, repo, ref: sha });
            core.info(`Combined status: ${data.state}`);
            core.setOutput('ok', data.state === 'success');

      - name: Merge PR (squash)
        if: steps.checks.outputs.ok == 'true'
        uses: peter-evans/merge-pull-request@v2
        with:
          commit-message: pull-request-title
          merge-method: squash
