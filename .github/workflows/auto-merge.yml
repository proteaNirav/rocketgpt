name: Auto Merge

on:
  repository_dispatch:
    types: [merge]

permissions:
  contents: write
  pull-requests: write

jobs:
  merge:
    runs-on: ubuntu-latest
    steps:
      - name: Log event payload (auto-merge)
        run: |
          echo '${{ toJson(github.event) }}' > event.json
          jq -C '.' event.json || cat event.json

      - name: Pre-merge status
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.repo;
            const pr = Number(context.payload.client_payload?.pr_number);
            if (!pr) core.setFailed('No pr_number in client_payload');
            const { data } = await github.rest.pulls.get({ owner, repo, pull_number: pr });
            core.info(`mergeable_state=${data.mergeable_state} draft=${data.draft} rebaseable=${data.rebaseable}`);

      - name: Merge PR (squash, on green)
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.repo;
            const pr = Number(context.payload.client_payload?.pr_number);
            try {
              await github.rest.pulls.merge({
                owner, repo, pull_number: pr,
                merge_method: 'squash'
              });
              core.info(`Merged PR #${pr}`);
            } catch (e) {
              core.setFailed(`Merge failed: ${e.message}`);
            }

      - name: Save auto-merge artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: auto-merge-${{ github.run_id }}
          path: event.json
