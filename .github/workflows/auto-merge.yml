name: Auto Merge

on:
  pull_request:
    types: [labeled, synchronize, reopened, ready_for_review]
    branches: [ main, dev ]
  check_suite:
    types: [completed]

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: auto-merge-${{ github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true

jobs:
  merge-if-safe:
    runs-on: ubuntu-latest
    steps:
      - name: Resolve PR context
        id: ctx
        uses: actions/github-script@v7
        with:
          script: |
            // Determine PR (works on pull_request or check_suite)
            let pr = context.payload.pull_request;
            if (!pr && context.eventName === 'check_suite') {
              const { repository } = context.payload;
              const sha = context.payload.check_suite?.head_sha;
              const prs = await github.rest.repos.listPullRequestsAssociatedWithCommit({
                owner: repository.owner.login,
                repo: repository.name,
                commit_sha: sha
              });
              pr = prs.data[0];
            }
            if (!pr) { core.setFailed('No PR context.'); return; }
            core.setOutput('number', pr.number);
            core.setOutput('labels', JSON.stringify(pr.labels.map(l=>l.name)));
            core.setOutput('head', pr.head.sha);

      - name: Guard: require label
        uses: actions/github-script@v7
        with:
          script: |
            const labels = JSON.parse(core.getInput('labels'));
            if (!labels.includes('auto-merge')) {
              core.notice('No auto-merge label; skipping.');
              process.exit(0);
            }
          inputs:
            labels: ${{ steps.ctx.outputs.labels }}

      - name: Check combined status
        id: status
        uses: actions/github-script@v7
        with:
          script: |
            const number = Number(core.getInput('number'));
            const {data: pr} = await github.rest.pulls.get({
              owner: context.repo.owner, repo: context.repo.repo, pull_number: number
            });
            // Merge only if mergeable & all checks successful
            const ok = (pr.mergeable_state === 'clean' || pr.mergeable_state === 'has_hooks') && pr.draft === false;
            core.setOutput('ok', ok ? 'true' : 'false');
          inputs:
            number: ${{ steps.ctx.outputs.number }}

      - name: Merge PR (squash)
        if: steps.status.outputs.ok == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const number = Number(core.getInput('number'));
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: number,
              merge_method: 'squash'
            });
          inputs:
            number: ${{ steps.ctx.outputs.number }}
